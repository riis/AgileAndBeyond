//
//  sessionsViewController.m
//  AgileAndBeyond
//
//  Created by Derek VerLee on 1/27/11.
//  Copyright 2011 RIIS LLC. All rights reserved.
//

#import "mainFilterSelectionMenu.h"
#import "sessionListViewController.h"
#import "AgileAndBeyondAppGlobals.h"
#import "session.h"

@implementation mainFilterSelectionMenu 

// functions for "building" the table view
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView 
{
  return 4;      
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section 
{
  switch (section) {
  case 0 : return 1 ; // All 
  case 1 : return 2 ; // by type
  case 2 : return 3 ; // By Difficulty 
  case 3 : return 5 ; // by Track
  default: return 0 ; 
    // TODO error/assert andor do something consistant for "code should not be reached
  }
}

-(NSString*)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section 
{

  // We'll just hard code the section titles, otherwise it ends up being in memory twice,
  // plus any data structures.
  switch (section) {
  case 0 : return @"All"; 
  case 1 : return @"By Type";
  case 2 : return @"By Difficulty"; 
  case 3 : return @"By Track";
  default: return @"";	
    // TODO unreachable code error? 
  }
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath 
{
  
  static NSString *CellIdentifier = @"Cell";

  // we use the variable "cell" to hold the tablecell object to operate on
  // first, the dequeueReusable.. call sees if the cell already exists

  // TODO, bring back the cell recycling (something was broken, so I commented it out)
  UITableViewCell *cell ;//= [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
	
  // if cell isn't nil, we've just fetched it from cache so don't recreate	
  // if (cell != nil) return cell;  // just abort here, we're recycling the cell
	
  // This varient of the line generated by xcode appears in O'Rielly book,p224
  cell = [[[UITableViewCell alloc] initWithFrame:CGRectZero reuseIdentifier:CellIdentifier] autorelease];	
	
  switch ([indexPath indexAtPosition:0]) // switch for which section
    {
    case 0 :  //                                        __==  section ALL 
      switch ([indexPath indexAtPosition:1]) 
	{ // switch by position within section 0 ("All")
	case 0 :
	  cell.textLabel.text = @"All"; 
	  cell.accessoryType=UITableViewCellAccessoryDisclosureIndicator;
	  break;	
	}
      break;
    case 1 :  //                                         __==  section By Type
      switch ([indexPath indexAtPosition:1]) 
	{
	case 0 : 
	  cell.textLabel.text = @"Breakout Presentations"; 
	  cell.accessoryType=UITableViewCellAccessoryDisclosureIndicator;	
	  break;
	case 1 : 
	  cell.textLabel.text = @"Workshops"; 
	  cell.accessoryType=UITableViewCellAccessoryDisclosureIndicator;	
	  break;
	}
      break;			
    case 2 : //                                         __==  section By Difficulty
      switch ([indexPath indexAtPosition:1]) 
	{
	case 0 : 
	  cell.textLabel.text = @"Beginner"; 
	  cell.accessoryType=UITableViewCellAccessoryDisclosureIndicator;	
	  break;
	case 1 : 
	  cell.textLabel.text = @"Intermediate"; 
	  cell.accessoryType=UITableViewCellAccessoryDisclosureIndicator;	
	  break;
	case 2 : 
	  cell.textLabel.text = @"Advanced"; 
	  cell.accessoryType=UITableViewCellAccessoryDisclosureIndicator;	
	  break;				
	}
      break;			
    case 3 :  //                                         __==  section By Track
      switch ([indexPath indexAtPosition:1]) 
	{
	case 0 : 
	  cell.textLabel.text = @"Hands-On Technology Track"; 
	  cell.accessoryType=UITableViewCellAccessoryDisclosureIndicator;	
	  break;
	case 1 : 
	  cell.textLabel.text = @"Interactive Process Track"; 
	  cell.accessoryType=UITableViewCellAccessoryDisclosureIndicator;	
	  break;
	case 2 : 
	  cell.textLabel.text = @"Usability Experience Track"; 
	  cell.accessoryType=UITableViewCellAccessoryDisclosureIndicator;	
	  break;
	case 3 : 
	  cell.textLabel.text = @"Leadership Track"; 
	  cell.accessoryType=UITableViewCellAccessoryDisclosureIndicator;	
	  break;
	case 4 : 
	  cell.textLabel.text = @"Open Space Track"; 
	  cell.accessoryType=UITableViewCellAccessoryDisclosureIndicator;	
	  break;
	}
      break;
    }
	
  return cell;
}


- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath 
{

  sessionListViewController* filteredListView = nil;
 
  // TODO move this
  static NSMutableArray* allSessions = nil;
  if( allSessions == nil) 
    allSessions = [[NSArray alloc] initWithArray:[AABSessions allValues]]; // will be unsorted
  
  // TODO don't do this each time, move this code
  tableViewSection* newSection;
  NSMutableArray* viewSections = [[NSMutableArray alloc] init];  

  newSection = [[tableViewSection alloc] init];
  newSection.title = [AAB_FIRST_SLOT_DATE descriptionWithCalendarFormat:DATE_FORMAT_STRING timeZone:nil 
					  locale:[[NSUserDefaults standardUserDefaults] dictionaryRepresentation]];
  newSection.predicate=[NSPredicate predicateWithFormat:@"timeStart == %@", AAB_FIRST_SLOT_DATE];
  [viewSections addObject:newSection];
  newSection = [[tableViewSection alloc] init];
  newSection.title = [AAB_SECOND_SLOT_DATE descriptionWithCalendarFormat:DATE_FORMAT_STRING timeZone:nil 
					   locale:[[NSUserDefaults standardUserDefaults] dictionaryRepresentation]];
  newSection.predicate =  [NSPredicate predicateWithFormat:@"timeStart == %@", AAB_SECOND_SLOT_DATE];
  [viewSections addObject:newSection];

  NSPredicate* myPredicate;

  switch ([indexPath indexAtPosition:0]) // switch for which section
    {
    case 0 :  //                                         __==  section ALL
      switch ([indexPath indexAtPosition:1]) { // switch by position within section 0 ("All")
      case 0 :  // ----====   ALL  SESSIONS   ===---
	// TODO : don't create a new listview each time
	myPredicate= [NSPredicate predicateWithValue:TRUE];  
	
	filteredListView = [sessionListViewController 
			     createUsingArray: [[NSMutableArray alloc] initWithArray:[AABSessions allValues]]
			     groupList:viewSections
			     filterBy:myPredicate];
	[filteredListView setTitle:@"All Sessions"];
	[filteredListView retain]; // TODO , correct? 
	[self.navigationController pushViewController:filteredListView animated:YES];
	//[filteredListView release]; // TODO , correct? 
	break;				
      }
      break;			 
    case 1: //                                         __==  section By Type
      switch ([indexPath indexAtPosition:1]) 
	{
	case 0 : // ----==== Breakout Presenentations SESSIONS ===---
	  myPredicate=[NSPredicate predicateWithFormat:@"timeStart == %@", AAB_FIRST_SLOT_DATE];
	  filteredListView = [sessionListViewController 
			       createUsingArray: [[NSMutableArray alloc] initWithArray:[AABSessions allValues]]
			       groupList:viewSections
			       filterBy:myPredicate];
	  [filteredListView setTitle:@"Breakout Presentations"];
	  [filteredListView retain]; // TODO , correct? 
	  [self.navigationController pushViewController:filteredListView animated:YES];
	  //[filteredListView release]; // TODO , correct? 
	  break;
	case 1 : // ----==== Breakout Presenentations SESSIONS ===---
	  myPredicate=[NSPredicate predicateWithFormat:@"timeStart == %@", AAB_SECOND_SLOT_DATE];
	  filteredListView = [sessionListViewController 
			       createUsingArray: [[NSMutableArray alloc] initWithArray:[AABSessions allValues]]
			       groupList:viewSections
			       filterBy:myPredicate];
	  [filteredListView setTitle:@"Workshops"];
	  [filteredListView retain]; // TODO , correct? 
	  [self.navigationController pushViewController:filteredListView animated:YES];
	  //[filteredListView release]; // TODO , correct? 
	  break;
	}
      break;
    case 2 : //                                         __==  section By Difficulty
      switch ([indexPath indexAtPosition:1]) 
	{
	case 0 : // ----==== BEGINER DIFFICULTY SESSIONS ===---
	  myPredicate=[NSPredicate predicateWithFormat:@"isBeginner == YES"];  
	
	  filteredListView = [sessionListViewController 
			       createUsingArray: [[NSMutableArray alloc] initWithArray:[AABSessions allValues]]
			       groupList:viewSections
			       filterBy:myPredicate];
	  [filteredListView setTitle:@"Beginner Sessions"];
	  [filteredListView retain]; // TODO , correct? 
	  [self.navigationController pushViewController:filteredListView animated:YES];
	  //[filteredListView release]; // TODO , correct? 
	
	  break;
	case 1 :  // ----==== INTERMEDIATE DIFFICULTY SESSIONS ===---
	  myPredicate=[NSPredicate predicateWithFormat:@"isIntermediate == YES"];  
	
	  filteredListView = [sessionListViewController 
			       createUsingArray: [[NSMutableArray alloc] initWithArray:[AABSessions allValues]]
			       groupList:viewSections
			       filterBy:myPredicate];
	  [filteredListView setTitle:@"Intermediate Sessions"];
	  [filteredListView retain]; // TODO , correct? 
	  [self.navigationController pushViewController:filteredListView animated:YES];
	  //[filteredListView release]; // TODO , correct? 
	  break;
	case 2 :  // ----==== ADVANCED DIFFICULTY SESSIONS ===---
	  myPredicate=[NSPredicate predicateWithFormat:@"isAdvanced == YES"];  
	
	  filteredListView = [sessionListViewController 
			       createUsingArray: [[NSMutableArray alloc] initWithArray:[AABSessions allValues]]
			       groupList:viewSections
			       filterBy:myPredicate];
	  [filteredListView setTitle:@"Advanced Sessions"];
	  [filteredListView retain]; // TODO , correct? 
	  [self.navigationController pushViewController:filteredListView animated:YES];
	  //[filteredListView release]; // TODO , correct? 
	  break;					
	}
      break;      // section By Trac
    case 3 ://                                         __==  section By  Track  
      switch ([indexPath indexAtPosition:1]) 
	{
	case 0 :  // ----==== HANDS-ON TECHNOLOGY TRACK SESSIONS ===---
	  myPredicate=[NSPredicate predicateWithFormat:@"track like 'Hands-On Technology'"];  
	
	  filteredListView = [sessionListViewController 
			       createUsingArray: [[NSMutableArray alloc] initWithArray:[AABSessions allValues]]
			       groupList:viewSections
			       filterBy:myPredicate];
	  [filteredListView setTitle:@"Hands-On Technology Track"];
	  [filteredListView retain]; // TODO , correct? 
	  [self.navigationController pushViewController:filteredListView animated:YES];
	  //[filteredListView release]; // TODO , correct? 
	  break;
	case 1 : // ----==== INTERACTIVE PROCESS TRACK SESSIONS ===---
	  myPredicate=[NSPredicate predicateWithFormat:@"track like 'Interactive Process'"];  
	
	  filteredListView = [sessionListViewController 
			       createUsingArray: [[NSMutableArray alloc] initWithArray:[AABSessions allValues]]
			       groupList:viewSections
			       filterBy:myPredicate];
	  [filteredListView setTitle:@"Interactive Process Track"];
	  [filteredListView retain]; // TODO , correct? 
	  [self.navigationController pushViewController:filteredListView animated:YES];
	  //[filteredListView release]; // TODO , correct? 
	  break;
	case 2 : // ----==== USABILITY EXPERIENCE TRACK SESSIONS ===---
	  myPredicate=[NSPredicate predicateWithFormat:@"track like 'Usability Experience'"];  
	
	  filteredListView = [sessionListViewController 
			       createUsingArray: [[NSMutableArray alloc] initWithArray:[AABSessions allValues]]
			       groupList:viewSections
			       filterBy:myPredicate];
	  [filteredListView setTitle:@"Usability Experience Track"]; 
	  [filteredListView retain]; // TODO , correct? 
	  [self.navigationController pushViewController:filteredListView animated:YES];
	  //[filteredListView release]; // TODO , correct? 
	  break;
	case 3 :  // ----==== LEADERSHIP TRACK SESSIONS ===---
	  myPredicate=[NSPredicate predicateWithFormat:@"track like 'Leadership'"];  
	
	  filteredListView = [sessionListViewController 
			       createUsingArray: [[NSMutableArray alloc] initWithArray:[AABSessions allValues]]
			       groupList:viewSections
			       filterBy:myPredicate];
	  [filteredListView setTitle:@"Leadership Track"];
	  [filteredListView retain]; // TODO , correct? 
	  [self.navigationController pushViewController:filteredListView animated:YES];
	  //[filteredListView release]; // TODO , correct? 
	  break;
	case 4 :  // ----==== OPEN SPACE TRACK SESSIONS ===---
	  myPredicate=[NSPredicate predicateWithFormat:@"track like 'Open Space'"];  
	
	  filteredListView = [sessionListViewController 
			       createUsingArray: [[NSMutableArray alloc] initWithArray:[AABSessions allValues]]
			       groupList:viewSections
			       filterBy:myPredicate];
	  [filteredListView setTitle:@"Open Space Track"];
	  [filteredListView retain]; // TODO , correct? 
	  [self.navigationController pushViewController:filteredListView animated:YES];
	  //[filteredListView release]; // TODO , correct? 
	  break;
	}
      break;
    }
	
}	
@end
